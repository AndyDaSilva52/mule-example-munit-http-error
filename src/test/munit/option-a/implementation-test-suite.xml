<?xml version="1.0" encoding="UTF-8"?>

<mule
  xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
  xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
  xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
  xmlns="http://www.mulesoft.org/schema/mule/core"
  xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
  xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
  <munit:config name="implementation-option-a-test-suite.xml" />


  <import
    doc:name="Import"
    file="option-a\munit-util-mock-http-request-for-errorMessage-using-listener-localhost-test-suite.xml"
    doc:description="munit-util-mock-http-request-for-errorMessage-using-listener-localhost-test-suite.xml" />


  <munit:before-suite name="implementation-test-suiteBefore_Suite">
    <!-- [STUDIO:"IMPORTANT: Global Elements has configuration for the HTTP Request config used in this MUnit Test Suite and also has the Import for the Listener defined in another MUnit Test Suite"]<logger level="TRACE" doc:name="IMPORTANT: Global Elements has configuration for the HTTP Request config used in this MUnit Test Suite and also has the Import for the Listener defined in another MUnit Test Suite" /> [STUDIO] -->
    <logger
      level="INFO"
      doc:name="INFO Before Suite"
      message="Before Suite" />
  </munit:before-suite>
  <!-- -->
  <!-- -->
  <!-- -->
  <munit:test
    name="implementation-test-suite-implementation-sub-flowTest"
    timeOut="900000">
    <munit:enable-flow-sources>
      <munit:enable-flow-source
        value="munit-util-mock-http-request-for-errorMessage-using-listener.flow" />
    </munit:enable-flow-sources>
    <munit:behavior>
      <!-- -->
      <munit-tools:mock-when
        doc:name="Mock HTTP Req External GET /health -&gt; then call flow 400 ;"
        processor="http:request">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="GET"
            attributeName="method" />
          <munit-tools:with-attribute
            whereValue="HTTP_Request_configuration_External"
            attributeName="config-ref" />
          <munit-tools:with-attribute
            whereValue="/health"
            attributeName="path" />
        </munit-tools:with-attributes>
        <munit-tools:then-call
          flow="implementation-test-suite.mock-http-req-external-400.flow" />
      </munit-tools:mock-when>
      <!-- -->
      <munit-tools:mock-when
        doc:name="Mock HTTP Req System GET /health -&gt; then call flow 503 ;"
        processor="http:request">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="GET"
            attributeName="method" />
          <munit-tools:with-attribute
            whereValue="HTTP_Request_configuration_System"
            attributeName="config-ref" />
          <munit-tools:with-attribute
            whereValue="/health"
            attributeName="path" />
        </munit-tools:with-attributes>
        <munit-tools:then-call
          flow="implementation-test-suite.mock-http-req-system-503.flow" />
      </munit-tools:mock-when>
      <!-- -->
      <munit-tools:spy
        doc:name="Spy HTTP Req System GET /health"
        processor="http:request">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="GET"
            attributeName="method" />
          <munit-tools:with-attribute
            whereValue="HTTP_Request_configuration_System"
            attributeName="config-ref" />
          <munit-tools:with-attribute
            whereValue="/health"
            attributeName="path" />
        </munit-tools:with-attributes>
      </munit-tools:spy>
      <!-- -->
      <munit-tools:mock-when
        doc:name="Mock HTTP Req Process GET /health -&gt; then call flow (default 200) ;"
        doc:id="f9eebac1-f8b3-406b-84d8-267302f3696c"
        processor="http:request">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="GET"
            attributeName="method" />
          <munit-tools:with-attribute
            whereValue="/health"
            attributeName="path" />
          <munit-tools:with-attribute
            whereValue="HTTP_Request_configuration_Process"
            attributeName="config-ref" />
        </munit-tools:with-attributes>
        <munit-tools:then-call
          flow="implementation-test-suite.http-req-mock-based-on-vars.munitHttpMock.flow" />
      </munit-tools:mock-when>
    </munit:behavior>
    <!-- -->
    <munit:execution>
      <flow-ref
        doc:name="Flow-ref to implementation-for-option-a.subflow"
        name="implementation-for-option-a.subflow"
        doc:id="d0a46ca0-c29e-4e2e-b3e3-d8483677b8a8" />
    </munit:execution>
    <!-- -->
    <munit:validation>
      <munit-tools:verify-call
        doc:name="ERROR EXCEPTION External"
        processor="logger"
        atLeast="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="sgdinr"
            attributeName="doc:id" />
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- -->
      <munit-tools:verify-call
        doc:name="ERROR EXCEPTION System"
        processor="logger"
        atLeast="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="woqqvb"
            attributeName="doc:id" />
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- -->
      <munit-tools:verify-call
        doc:name="3x HTTP Req MUnit Listener"
        processor="http:request"
        times="3">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute
            whereValue="MUnit_HTTP_Request_configuration"
            attributeName="config-ref" />
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
    
</munit:validation>
  </munit:test>



  <flow name="implementation-test-suite.mock-http-req-external-400.flow">
    <ee:transform
      doc:name="http {queryParams: statusCode: 400 } } ; payload/json;">
      <ee:message>
        <ee:set-payload><![CDATA[%dw 2.0
output application/json indent=false
---
{
  message: "Account already exists!"
}]]></ee:set-payload>
      </ee:message>
      <ee:variables>
        <ee:set-variable variableName="munitHttpMock"><![CDATA[%dw 2.0
output application/java
---
{
  queryParams: {
    statusCode: 400,
  }
}]]></ee:set-variable>
      </ee:variables>
    </ee:transform>
    <!-- -->
    <flow-ref
      doc:name="FlowRef implementation-test-suite.http-req-mock-based-on-vars.munitHttpMock"
      name="implementation-test-suite.http-req-mock-based-on-vars.munitHttpMock.flow" />
  </flow>



  <flow name="implementation-test-suite.mock-http-req-system-503.flow">
    <ee:transform
      doc:name="http {queryParams: statusCode: 503 } } ; payload/json;">
      <ee:message>
        <ee:set-payload><![CDATA[%dw 2.0
output application/json indent=false
---
{
  message: ""
}]]></ee:set-payload>
      </ee:message>
      <ee:variables>
        <ee:set-variable variableName="munitHttpMock"><![CDATA[%dw 2.0
output application/java
---
{
  queryParams: {
    statusCode: 503,
  }
}]]></ee:set-variable>
      </ee:variables>
    </ee:transform>
    <!-- -->
    <flow-ref
      doc:name="FlowRef implementation-test-suite.http-req-mock-based-on-vars.munitHttpMock"
      name="implementation-test-suite.http-req-mock-based-on-vars.munitHttpMock.flow" />
  </flow>



</mule>
